name: Analyze Logs in PR

on:
  pull_request:
    types: [opened, edited, synchronize]
    branches:
      - main
      - develop

jobs:
  analyze-logs:
    runs-on: self-hosted
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:   
          fetch-depth: 0  # Important pour récupérer l'historique complet

      - name: Install Docker Compose (if missing)
        shell: powershell
        run: |
          if (-not (Get-Command docker-compose -ErrorAction SilentlyContinue)) {
            choco install docker-compose
          }

          - name: Extract Java Logs from Local Project
          shell: powershell
          run: |
            $logStatements = @()
            $javaFiles = Get-ChildItem -Path "services/training_data" -Recurse -Filter "*.java"
  
            foreach ($file in $javaFiles) {
                $content = Get-Content $file.FullName -Raw
                $matches = [regex]::Matches($content, 'LOG\.(info|debug|warn|error)\(.*?\)|System\.out\.println\(.*?\)')
  
                if ($matches.Count -gt 0) {
                    $logStatements += "File: $($file.FullName)`n$matches`n"
                }
            }
  
            if ($logStatements.Count -gt 0) {
                $logStatements | Out-File logs_extracted.txt -Encoding utf8
                Get-Content logs_extracted.txt
            } else {
                echo "No logs found in Java files."
            }

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Start Ollama with Docker Compose
        run: docker-compose -f services/docker-compose.yml up -d

      - name: Wait for Ollama to start
        run: sleep 10  # Ajuste si nécessaire

      - name: Run Ollama Query
        run: node logdensitytool/src/services/apiModel/queryOllama.js
        